{"version":3,"sources":["Data/client.js","Search/Search.js","Icon/Icon.js","Icons/Icons.js","Member/Member.js","Members/Members.js","Group/Group.js","App/App.js","registerServiceWorker.js","index.js"],"names":["client","getAllPanel","json","members","filter","member","type","getAllCast","getMemberById","id","find","getMemberByEnglishName","name","english","getAllSeasons","cast","this","seasonsAsStrings","Set","map","JSON","stringify","season","Array","from","seasonString","parse","getMembersBySeasonName","seasonName","searchMembersByEnglishName","searchTerm","term","toUpperCase","trim","split","join","includes","buildState","panel","title","seasons","year","sort","a","b","Search","props","handleChange","e","setState","value","target","handleSearchChange","state","className","onSubmit","handleSubmit","onChange","placeholder","Component","Icon","href","url","rel","iconName","icon","faInstagram","faTwitter","faSnapchat","faYoutube","faTumblr","faFacebook","faPencilAlt","faFileAlt","size","buildIcon","Icons","accounts","length","account","key","role","aria-label","Member","getImageSrc","imageFileName","process","getImage","fallbackSrc","image","webPSrc","jp2Src","ua","window","navigator","userAgent","indexOf","src","alt","srcSet","japanese","Members","Group","App","newState","groups","group","Header","Footer","faHeart","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6u8BAkFeA,EAhFA,CACbC,YADa,WAEX,OAAOC,EAAKC,QAAQC,QAAO,SAAAC,GAAM,MAAoB,UAAhBA,EAAOC,SAG9CC,WALa,WAMX,OAAOL,EAAKC,QAAQC,QAAO,SAAAC,GAAM,MAAoB,SAAhBA,EAAOC,SAG9CE,cATa,SASCC,GACZ,OAAOP,EAAKC,QAAQO,MAAK,SAAAL,GAAM,OAAIA,EAAOI,KAAOA,MAGnDE,uBAba,SAaUC,GACrB,OAAOV,EAAKC,QAAQO,MAAK,SAAAL,GAAM,OAAIA,EAAOO,KAAKC,UAAYD,MAG7DE,cAjBa,WAkBX,IAAMC,EAAOC,KAAKT,aACZU,EAAmB,IAAIC,IAAIH,EAAKI,KAAI,SAAAd,GAAM,OAAIe,KAAKC,UAAUhB,EAAOiB,YAC1E,OAAOC,MAAMC,KAAKP,GAAkBE,KAAI,SAAAM,GAAY,OAAIL,KAAKM,MAAMD,OAGrEE,uBAvBa,SAuBUC,GACrB,OAAO1B,EAAKC,QACTC,QAAO,SAAAC,GAAM,MAAoB,SAAhBA,EAAOC,QACxBF,QAAO,SAAAW,GAAI,OAAIA,EAAKO,OAAOV,OAASgB,MAGzCC,2BA7Ba,SA6BcC,GACzB,IAAMC,EAAOD,EACVE,cACAC,OACAC,MAAM,KACNC,KAAK,IAER,OAAOjC,EAAKC,QAAQC,QAAO,SAAAC,GAMzB,OALaA,EAAOO,KAAKC,QACtBmB,cACAE,MAAM,KACNC,KAAK,IAEIC,SAASL,OAKzBM,WA/Ca,WA+CC,IAAD,OAGLC,EAAQ,CACZC,MAAO,QACPpC,QAASa,KAAKf,eAIVuC,EAAUxB,KAAKF,gBAAgBK,KAAI,SAAAG,GACvC,MAAO,CACLiB,MAAOjB,EAAOV,KACd6B,KAAMnB,EAAOmB,KACbtC,QAAS,EAAKwB,uBAAuBL,EAAOV,UAehD,OAVA4B,EAAQE,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEF,KAAOG,EAAEH,MACL,EAENE,EAAEF,KAAOG,EAAEH,KACN,EAEF,KAGH,CAAEH,GAAR,mBAAkBE,M,eCnDPK,G,kBAtBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,OAAOD,QAChC,EAAKJ,MAAMM,mBAAmBJ,EAAEG,OAAOD,QALvC,EAAKG,MAAQ,CAAEH,MAAO,IAFL,E,sEAUT,IAAD,OACP,OACE,0BAAMI,UAAU,SAASC,SAAUvC,KAAKwC,cACtC,+BACE,yCACA,2BAAON,MAAOlC,KAAKqC,MAAMH,MAAOO,SAAU,SAACT,GAAD,OAAO,EAAKD,aAAaC,IAAIU,YAAY,8D,GAhBxEC,c,iCCwDNC,G,MA9CF,SAACd,GAqCZ,OACE,wBAAIQ,UAAU,QACZ,uBAAGO,KAAMf,EAAMgB,IAAKX,OAAO,SAASY,IAAI,sBAAsBxB,MAAOO,EAAMxC,MArC/E,SAAmB0D,GACjB,IAAIC,EAAO,KAEX,OAAOD,GACL,IAAK,YACHC,EAAOC,IACP,MACF,IAAK,UACHD,EAAOE,IACP,MACF,IAAK,WACHF,EAAOG,IACP,MACF,IAAK,UACHH,EAAOI,IACP,MACF,IAAK,SACHJ,EAAOK,IACP,MACF,IAAK,WACHL,EAAOM,IACP,MACF,IAAK,SACHN,EAAOO,IACP,MACF,IAAK,YACHP,EAAOQ,IACP,MACF,QACER,EAAOO,IAGX,OAAO,kBAAC,IAAD,CAAiBP,KAAMA,EAAMS,KAAK,OAMpCC,CAAU7B,EAAMmB,MAAM,8BAAOnB,EAAMxC,UCzB7BsE,EAvBD,SAAC9B,GACb,GAAIA,EAAM+B,SAASC,OAAS,EAAG,CAC7B,IAAMD,EAAW/B,EAAM+B,SAAS1D,KAAI,SAAA4D,GAClC,OAAO,kBAAC,EAAD,CACLC,IAAKD,EAAQjB,IACbxD,KAAMyE,EAAQzE,KACd2D,KAAMc,EAAQd,KACdH,IAAKiB,EAAQjB,SAIjB,OACE,wBAAIR,UAAU,SACXuB,GAIL,OACE,wEAA6C,0BAAMI,KAAK,MAAMC,aAAW,aAA5B,kBCiCpCC,E,2MAjDbC,YAAc,SAACC,EAAe/E,GAS5B,OANK+E,EAGK,UAAMC,GAAN,2BAA+CD,EAA/C,YAAgE/E,GAF7D,2C,EAQfiF,SAAW,SAACF,GACV,IAAMG,EAAc,EAAKJ,YAAY,EAAKtC,MAAM2C,MAAO,OACjDC,EAAU,EAAKN,YAAY,EAAKtC,MAAM2C,MAAO,QAC7CE,EAAS,EAAKP,YAAY,EAAKtC,MAAM2C,MAAO,OAE5CG,EAAKC,OAAOC,UAAUC,UAG5B,OAFaH,EAAGI,QAAQ,UAAY,GAAKJ,EAAGI,QAAQ,aAAe,EAG1D,yBAAK1C,UAAU,eAAe2C,IAAKT,EAAaU,IAAK,EAAKpD,MAAMlC,KAAKC,UAI5E,iCACE,4BAAQsF,OAAQT,EAASpF,KAAK,eAC9B,4BAAQ6F,OAAQR,EAAQrF,KAAK,cAC7B,yBAAKgD,UAAU,eAAe2C,IAAKT,EAAaU,IAAK,EAAKpD,MAAMlC,KAAKC,Y,wEAMzE,OACE,wBAAIyC,UAAU,UACZ,yBAAKA,UAAU,0BACZtC,KAAKuE,YAER,yBAAKjC,UAAU,gCACb,wBAAIA,UAAU,uBAAuBtC,KAAK8B,MAAMlC,KAAKC,SACrD,0BAAMyC,UAAU,wBAAwBtC,KAAK8B,MAAMlC,KAAKwF,UACxD,kBAAC,EAAD,CAAOvB,SAAU7D,KAAK8B,MAAM+B,iB,GA5CjBlB,aCsBN0C,E,iLApBX,IAAMlG,EAAUa,KAAK8B,MAAM3C,QAAQgB,KAAI,SAAAd,GACrC,OACE,kBAAC,EAAD,CACE2E,IAAK3E,EAAOI,GACZA,GAAIJ,EAAOI,GACXG,KAAMP,EAAOO,KACb6E,MAAOpF,EAAOoF,MACdZ,SAAUxE,EAAOwE,cAKvB,OACE,wBAAIvB,UAAU,WACXnD,O,GAhBawD,aCYP2C,E,iLAVX,OACE,yBAAKhD,UAAU,SACb,8BAAOtC,KAAK8B,MAAML,MAClB,4BAAKzB,KAAK8B,MAAMP,OAChB,kBAAC,EAAD,CAASpC,QAASa,KAAK8B,MAAM3C,e,GANjBwD,aCGd4C,E,YACJ,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KAORM,mBAAqB,SAACF,GACpB,GAAKA,EAAM4B,OAAX,CASA,IAAM0B,EAAW,CACfC,OAAQ,CAAC,CACPlE,MAAO,iBACPpC,QAASH,EAAO6B,2BAA2BqB,MAI/C,EAAKD,SAASuD,QAdZ,EAAKvD,SAAS,CACZwD,OAAQzG,EAAOqC,gBATnB,EAAKgB,MAAQ,CACXoD,OAAQzG,EAAOqC,cAJA,E,sEA6BjB,IAAMoE,EAASzF,KAAKqC,MAAMoD,OAAOtF,KAAI,SAAAuF,GACnC,OACE,kBAAC,EAAD,CACE1B,IAAK0B,EAAMnE,MACXA,MAAOmE,EAAMnE,MACbE,KAAMiE,EAAMjE,KACZtC,QAASuG,EAAMvG,aAKrB,OACE,yBAAKmD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQF,mBAAoBpC,KAAKoC,qBAChCqD,EACD,kBAAC,EAAD,W,GA9CU9C,aAoDZgD,EAAS,SAAC7D,GACd,OACE,gCACE,oDACA,gKAAsI,uBAAGe,KAAK,oCAAoCV,OAAO,SAASY,IAAI,uBAAhE,yBAAtI,UAA4P,uBAAGF,KAAK,uCAAR,gCAA5P,6DACA,uBAAGP,UAAU,UAAb,6EAAgG,uBAAGO,KAAK,yCAAyCV,OAAO,SAASY,IAAI,uBAArE,cAAhG,QAA8M,uBAAGF,KAAK,qCAAqCV,OAAO,SAASY,IAAI,uBAAjE,UAA9M,4EACA,uBAAGT,UAAU,UAAb,mIACA,uBAAGA,UAAU,UAAb,uFACA,uBAAGA,UAAU,UAAb,6LAAgN,uBAAGO,KAAK,uBAAuBE,IAAI,sBAAsBZ,OAAO,UAAhE,YAAhN,qCACA,uBAAGG,UAAU,UAAb,0EAA6F,uBAAGO,KAAK,uBAAuBE,IAAI,sBAAsBZ,OAAO,UAAhE,YAA7F,uCAKAyD,EAAS,SAAC9D,GACd,OACE,gCACE,wCAAc,kBAAC,IAAD,CAAiBmB,KAAM4C,MAArC,OAAqD,uBAAGhD,KAAK,yBAAyBE,IAAI,sBAAsBZ,OAAO,UAAlE,cAArD,IAA+I,6BAA/I,sEAMSoD,ICzETO,EAAcC,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBtB,UAAUuB,cACPC,SAASF,GACTG,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrE,QACfyC,UAAUuB,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBvC,UAAW,CAGzE,GADkB,IAAIwC,IAAIhD,GAAwBO,OAAOmB,UAC3CuB,SAAW1C,OAAOmB,SAASuB,OAIvC,OAGF1C,OAAO2C,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAM9B,GAAN,sBAENwB,EAwCX,SAAiCM,GAE/BqB,MAAMrB,GACHG,MAAK,SAAAmB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgB7C,QAAQ,cAG7CF,UAAUuB,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7B1B,OAAOmB,SAASgC,eAKpB7B,EAAgBC,MAGnBY,OAAM,WACLF,QAAQC,IACN,oEAzDAkB,CAAwB7B,GAHxBD,EAAgBC,OC7BxB8B,K","file":"static/js/main.651e7bd1.chunk.js","sourcesContent":["import json from './db';\n\nconst client = {\n  getAllPanel() {\n    return json.members.filter(member => member.type === 'panel');\n  },\n\n  getAllCast() {\n    return json.members.filter(member => member.type === 'cast');\n  },\n\n  getMemberById(id) {\n    return json.members.find(member => member.id === id);\n  },\n\n  getMemberByEnglishName(name) {\n    return json.members.find(member => member.name.english === name);\n  },\n\n  getAllSeasons() {\n    const cast = this.getAllCast();\n    const seasonsAsStrings = new Set(cast.map(member => JSON.stringify(member.season)));\n    return Array.from(seasonsAsStrings).map(seasonString => JSON.parse(seasonString));\n  },\n\n  getMembersBySeasonName(seasonName) {\n    return json.members\n      .filter(member => member.type === 'cast')\n      .filter(cast => cast.season.name === seasonName);\n  },\n\n  searchMembersByEnglishName(searchTerm) {\n    const term = searchTerm\n      .toUpperCase()\n      .trim()\n      .split(' ')\n      .join('');\n\n    return json.members.filter(member => {\n      const name = member.name.english\n        .toUpperCase()\n        .split(' ')\n        .join('');\n\n      return name.includes(term);\n    });\n\n  },\n\n  buildState() {\n\n    // Build panel object\n    const panel = {\n      title: \"Panel\",\n      members: this.getAllPanel()\n    };\n\n    // Build array of seasons objects\n    const seasons = this.getAllSeasons().map(season => {\n      return {\n        title: season.name,\n        year: season.year,\n        members: this.getMembersBySeasonName(season.name)\n      }\n    });\n\n    // Sort by year, with most recent year coming first\n    seasons.sort((a, b) => {\n      if (a.year > b.year) {\n        return -1;\n      }\n      if (a.year < b.year) {\n        return 1;\n      }\n      return 0;\n    });\n\n    return [panel, ...seasons];\n\n  }\n};\n\nexport default client;","import React, { Component } from 'react';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n  }\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n    this.props.handleSearchChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <form className=\"Search\" onSubmit={this.handleSubmit}>\n        <label>\n          <span>Search:</span>\n          <input value={this.state.value} onChange={(e) => this.handleChange(e)} placeholder=\"Type an English name to find them in the list below\" />\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default Search;\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInstagram,\n  faTwitter,\n  faSnapchat,\n  faYoutube,\n  faTumblr,\n  faFacebook\n} from '@fortawesome/free-brands-svg-icons';\nimport { faPencilAlt, faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport './Icon.css';\n\nconst Icon = (props) => {\n\n  function buildIcon(iconName) {\n    let icon = null;\n\n    switch(iconName) {\n      case 'instagram':\n        icon = faInstagram;\n        break;\n      case 'twitter':\n        icon = faTwitter;\n        break;\n      case 'snapchat':\n        icon = faSnapchat;\n        break;\n      case 'youtube':\n        icon = faYoutube;\n        break;\n      case 'tumblr':\n        icon = faTumblr;\n        break;\n      case 'facebook':\n        icon = faFacebook;\n        break;\n      case 'pencil':\n        icon = faPencilAlt;\n        break;\n      case 'file-text':\n        icon = faFileAlt;\n        break;\n      default:\n        icon = faPencilAlt;\n    }\n\n    return <FontAwesomeIcon icon={icon} size=\"lg\" />\n  }\n\n  return (\n    <li className=\"Icon\">\n      <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\" title={props.type}>\n        {buildIcon(props.icon)}<span>{props.type}</span>\n      </a>\n    </li>\n  );\n};\n\nexport default Icon;","import React from 'react';\nimport './Icons.css';\n\nimport Icon from '../Icon/Icon';\n\nconst Icons = (props) => {\n  if (props.accounts.length > 0) {\n    const accounts = props.accounts.map(account => {\n      return <Icon \n        key={account.url}\n        type={account.type}\n        icon={account.icon}\n        url={account.url} \n      />\n    });\n\n    return (\n      <ul className=\"icons\">\n        {accounts}\n      </ul>\n    );\n  } else {\n    return (\n      <p>This person has no social media accounts! <span role=\"img\" aria-label=\"Sad emoji\">😭</span></p>\n    );\n  }\n};\n\nexport default Icons;","import React, { Component } from 'react';\nimport './Member.css';\n\nimport Icons from '../Icons/Icons';\n\nclass Member extends Component {\n\n  getImageSrc = (imageFileName, type) => {\n    let imageSrc = \"\";\n    \n    if (!imageFileName) {\n      imageSrc = \"https://picsum.photos/200/200?image=823\";\n    } else {\n      imageSrc = `${process.env.PUBLIC_URL}/images/members/${imageFileName}.${type}`;\n    }\n\n    return imageSrc;\n  }\n\n  getImage = (imageFileName) => {\n    const fallbackSrc = this.getImageSrc(this.props.image, 'jpg');\n    const webPSrc = this.getImageSrc(this.props.image, 'webp');\n    const jp2Src = this.getImageSrc(this.props.image, 'jp2');\n\n    const ua = window.navigator.userAgent;\n    const isIE = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n\n    if (isIE) {\n      return <img className=\"member-image\" src={fallbackSrc} alt={this.props.name.english} />\n    }\n\n    return (\n      <picture>\n        <source srcSet={webPSrc} type=\"image/webp\" />\n        <source srcSet={jp2Src} type=\"image/jp2\" />\n        <img className=\"member-image\" src={fallbackSrc} alt={this.props.name.english} />\n      </picture>\n    );\n  }\n\n  render() {\n    return (\n      <li className=\"Member\">\n        <div className=\"member-image-container\">\n          {this.getImage()}\n        </div>\n        <div className=\"member-information-container\">\n          <h3 className=\"member-name-english\">{this.props.name.english}</h3>\n          <span className=\"member-name-japanese\">{this.props.name.japanese}</span>\n          <Icons accounts={this.props.accounts} />\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Member;","import React, { Component } from 'react';\nimport './Members.css';\n\nimport Member from '../Member/Member';\n\nclass Members extends Component {\n  render() {\n    const members = this.props.members.map(member => {\n      return (\n        <Member\n          key={member.id}\n          id={member.id}\n          name={member.name}\n          image={member.image}\n          accounts={member.accounts}\n        />\n      );\n    });\n    \n    return (\n      <ul className=\"Members\">\n        {members}\n      </ul>\n    );\n  }\n}\n\nexport default Members;","import React, { Component } from 'react';\nimport './Group.css';\n\nimport Members from '../Members/Members';\n\nclass Group extends Component {\n  render() {\n    return (\n      <div className=\"Group\">\n        <span>{this.props.year}</span>\n        <h2>{this.props.title}</h2>\n        <Members members={this.props.members} />\n      </div>\n    );\n  }\n}\n\nexport default Group;","import React, { Component } from 'react';\nimport './App.css';\nimport client from '../Data/client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport Search from '../Search/Search';\nimport Group from '../Group/Group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groups: client.buildState()\n    }\n  }\n\n  handleSearchChange = (value) => {\n    if (!value.length) {\n\n      this.setState({\n        groups: client.buildState()\n      });\n\n      return;\n    }\n\n    const newState = {\n      groups: [{\n        title: \"Search Results\",\n        members: client.searchMembersByEnglishName(value)\n      }]\n    };\n\n    this.setState(newState);\n  }\n\n  render() {\n    const groups = this.state.groups.map(group => {\n      return (\n        <Group\n          key={group.title}\n          title={group.title}\n          year={group.year}\n          members={group.members}\n        />\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search handleSearchChange={this.handleSearchChange} />\n        {groups}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst Header = (props) => {\n  return (\n    <header>\n      <h1>Terrace House Social</h1>\n      <p>Below you'll find social media accounts for the panel and cast from Terrace House&trade;. Have an update to the list? Feel free to <a href=\"https://twitter.com/terracesocial\" target=\"_blank\" rel=\"noopener noreferrer\">reach out via Twitter</a> or at <a href=\"mailto:hello@terracehousesocial.com\">hello@terracehousesocial.com</a>. Please note: we are in no way affiliated with the show!</p>\n      <p className=\"update\">3/1/19 - Added the cast of Boys x Girls Next Door. Thanks to reddit users <a href=\"https://www.reddit.com/user/ajiichaban\" target=\"_blank\" rel=\"noopener noreferrer\">ajiichaban</a> and <a href=\"https://www.reddit.com/user/daiki3\" target=\"_blank\" rel=\"noopener noreferrer\">daiki3</a> for their help! Updated Yuuki Byrnes & Masao Wada's instagram accounts.</p>\n      <p className=\"update\">2/26/19 - Added remaining cast members for Opening New Doors season. Reach out if we're missing anyone's social media accounts!</p>\n      <p className=\"update\">9/27/18 - Updated Guy Sato's Instagram profile link. Thanks to Kris for the update!</p>\n      <p className=\"update\">8/14/18 - BIG UPDATE! Added and removed social media accounts for previous season cast members, added Opening New Doors cast members, and added Shono Hayama as a panelist. BIG THANKS to <a href=\"https://juicersx.us/\" rel=\"noopener noreferrer\" target=\"_blank\">juicersx</a> for making this update possible!</p>\n      <p className=\"update\">9/29/19 - Added new cast for Tokyo season (2019 - 2020). BIG THANKS to <a href=\"https://juicersx.us/\" rel=\"noopener noreferrer\" target=\"_blank\">juicersx</a> for making this update possible!</p>\n    </header>\n  );\n};\n\nconst Footer = (props) => {\n  return (\n    <footer>\n      <p>Made with {<FontAwesomeIcon icon={faHeart} />} by <a href=\"https://njosefbeck.com\" rel=\"noopener noreferrer\" target=\"_blank\">njosefbeck</a>.<br/>All images and information copyright to their respective owners.</p>\n    </footer>\n  );\n};\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}